{
    "openapi": "3.0.0",
    "info": {
        "title": "Point of Sale API",
        "description": "API Documentation for Point of Sale Application",
        "contact": {
            "email": "admin@example.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "Local API Server"
        }
    ],
    "paths": {
        "/api/v1/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login to get access token",
                "operationId": "b9b760991d94b179960cd7ddc93eedf2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/api/v1/product-categories": {
            "get": {
                "tags": [
                    "Product Categories"
                ],
                "summary": "Get all product categories",
                "operationId": "f22384f48c66117d0254d2c3f08fe312",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProductCategory"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Product Categories"
                ],
                "summary": "Create a new product category",
                "operationId": "e03eaeaf2172309270cac4a2eb99ccb8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductCategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductCategory"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/v1/product-categories/{id}": {
            "get": {
                "tags": [
                    "Product Categories"
                ],
                "summary": "Get a specific product category",
                "operationId": "d393777a95ea3d0080411521649f40b1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product category ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductCategory"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Product Categories"
                ],
                "summary": "Update a product category",
                "operationId": "c7ea5906ab10e4706b8d34e5a003384e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product category ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductCategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductCategory"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Product Categories"
                ],
                "summary": "Delete a product category",
                "operationId": "b1630e8495b6cf3205ab059f96aea19b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product category ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Category deleted successfully"
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            }
        },
        "/api/v1/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "List all products",
                "operationId": "072fd15d3be55577bb08c19d19f1e75c",
                "responses": {
                    "200": {
                        "description": "List of products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Product"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Create a new product",
                "operationId": "eda0d526a50c0273ae224eb766440226",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/products/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get a specific product",
                "operationId": "e607d06420046014759462af284aeb59",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Update a product",
                "operationId": "d3addbe72313169741e652404694ef9d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete a product",
                "operationId": "bbf520f1a23d6a5f3dfb12813b5930d6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Product deleted successfully"
                    },
                    "404": {
                        "description": "Product not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/transactions": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "List all transactions",
                "operationId": "7982071b501714798015d3493437d591",
                "responses": {
                    "200": {
                        "description": "List of transactions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Transaction"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Create a new transaction",
                "operationId": "a02494103b0173bce800dcdf6c920ce6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "date",
                                    "payment_status",
                                    "details"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-01-01"
                                    },
                                    "payment_status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "paid",
                                            "failed",
                                            "refunded"
                                        ],
                                        "example": "paid"
                                    },
                                    "details": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "product_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "qty": {
                                                    "type": "integer",
                                                    "example": 2
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Transaction created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transaction"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/transactions/{id}": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Get transaction details",
                "operationId": "be1ae535bffb92f867a54d7950c8de78",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transaction ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transaction"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Delete a transaction",
                "operationId": "1a2729c6c9e3a568e002c7d096d3e253",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transaction ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Transaction deleted successfully"
                    },
                    "404": {
                        "description": "Transaction not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Product": {
                "title": "Product",
                "description": "Product model",
                "properties": {
                    "product_id": {
                        "title": "ID",
                        "description": "Product ID",
                        "format": "int64",
                        "example": 1
                    },
                    "category": {
                        "$ref": "#/components/schemas/ProductCategory"
                    },
                    "product_name": {
                        "title": "Product Name",
                        "description": "Name of the product",
                        "example": "iPhone 15 Pro"
                    },
                    "picture": {
                        "title": "Picture",
                        "description": "Product image URL",
                        "example": "products/iphone15pro.jpg"
                    },
                    "stock": {
                        "title": "Stock",
                        "description": "Available stock",
                        "format": "int32",
                        "example": 50
                    },
                    "price": {
                        "title": "Price",
                        "description": "Product price",
                        "format": "float",
                        "example": 999.99
                    },
                    "desc_product": {
                        "title": "Description",
                        "description": "Product description",
                        "example": "Latest iPhone with advanced features"
                    },
                    "discount_type": {
                        "title": "Discount Type",
                        "description": "Type of discount (percentage or fixed)",
                        "enum": [
                            "percentage",
                            "fixed"
                        ],
                        "example": "percentage"
                    },
                    "discount_amount": {
                        "title": "Discount Amount",
                        "description": "Amount of discount",
                        "format": "float",
                        "example": 10
                    },
                    "start_date_disc": {
                        "title": "Discount Start Date",
                        "description": "Start date of discount",
                        "format": "datetime",
                        "example": "2024-01-01T00:00:00.000000Z"
                    },
                    "end_date_disc": {
                        "title": "Discount End Date",
                        "description": "End date of discount",
                        "format": "datetime",
                        "example": "2024-02-01T00:00:00.000000Z"
                    },
                    "created_date": {
                        "title": "Created Date",
                        "description": "Created at",
                        "format": "datetime",
                        "example": "2024-01-01T00:00:00.000000Z"
                    },
                    "created_by": {
                        "title": "Created By",
                        "description": "User who created the product",
                        "example": "Admin User"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Product"
                }
            },
            "ProductCategory": {
                "title": "ProductCategory",
                "description": "Product Category model",
                "properties": {
                    "product_category_id": {
                        "title": "ID",
                        "description": "Product Category ID",
                        "format": "int64",
                        "example": 1
                    },
                    "category_name": {
                        "title": "Category Name",
                        "description": "Name of the category",
                        "example": "Electronics"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "format": "datetime",
                        "example": "2024-01-01T00:00:00.000000Z"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "format": "datetime",
                        "example": "2024-01-01T00:00:00.000000Z"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ProductCategory"
                }
            },
            "Transaction": {
                "title": "Transaction",
                "description": "Transaction model",
                "properties": {
                    "trans_id": {
                        "title": "ID",
                        "description": "Transaction ID",
                        "format": "int64",
                        "example": 1
                    },
                    "user_id": {
                        "title": "User ID",
                        "description": "ID of user who made the transaction",
                        "format": "int64",
                        "example": 1
                    },
                    "date": {
                        "title": "Date",
                        "description": "Transaction date",
                        "format": "date",
                        "example": "2024-01-01"
                    },
                    "total_price": {
                        "title": "Total Price",
                        "description": "Total transaction price",
                        "format": "float",
                        "example": 1499.99
                    },
                    "payment_status": {
                        "title": "Payment Status",
                        "description": "Status of payment",
                        "enum": [
                            "pending",
                            "paid",
                            "failed",
                            "refunded"
                        ],
                        "example": "paid"
                    },
                    "details": {
                        "title": "Details",
                        "description": "Transaction details",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransactionDetail"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Transaction"
                }
            },
            "TransactionDetail": {
                "title": "TransactionDetail",
                "description": "Transaction Detail model",
                "properties": {
                    "trans_detail_id": {
                        "title": "ID",
                        "description": "Transaction Detail ID",
                        "format": "int64",
                        "example": 1
                    },
                    "product": {
                        "$ref": "#/components/schemas/Product"
                    },
                    "qty": {
                        "title": "Quantity",
                        "description": "Product quantity",
                        "format": "int32",
                        "example": 2
                    },
                    "price": {
                        "title": "Price",
                        "description": "Product price at time of purchase",
                        "format": "float",
                        "example": 999.99
                    },
                    "subtotal": {
                        "title": "Subtotal",
                        "description": "Subtotal for this item",
                        "format": "float",
                        "example": 1999.98
                    }
                },
                "type": "object",
                "xml": {
                    "name": "TransactionDetail"
                }
            },
            "ProductCategoryRequest": {
                "title": "Product Category Request",
                "description": "Product Category request body data",
                "required": [
                    "category_name"
                ],
                "properties": {
                    "category_name": {
                        "title": "category_name",
                        "description": "Name of the category",
                        "example": "Electronics"
                    }
                },
                "type": "object"
            },
            "ProductRequest": {
                "title": "Product Request",
                "description": "Product request body data",
                "required": [
                    "product_category_id",
                    "product_name",
                    "stock",
                    "price"
                ],
                "properties": {
                    "product_category_id": {
                        "title": "Product Category ID",
                        "description": "ID of product category",
                        "format": "int64",
                        "example": 1
                    },
                    "product_name": {
                        "title": "Product Name",
                        "description": "Name of the product",
                        "example": "iPhone 15 Pro"
                    },
                    "picture": {
                        "title": "Picture",
                        "description": "Product image URL",
                        "example": "products/iphone15pro.jpg"
                    },
                    "stock": {
                        "title": "Stock",
                        "description": "Available stock",
                        "format": "int32",
                        "example": 50
                    },
                    "price": {
                        "title": "Price",
                        "description": "Product price",
                        "format": "float",
                        "example": 999.99
                    },
                    "desc_product": {
                        "title": "Description",
                        "description": "Product description",
                        "example": "Latest iPhone with advanced features"
                    },
                    "discount_type": {
                        "title": "Discount Type",
                        "description": "Type of discount",
                        "enum": [
                            "percentage",
                            "fixed"
                        ],
                        "example": "percentage"
                    },
                    "discount_amount": {
                        "title": "Discount Amount",
                        "description": "Amount of discount",
                        "format": "float",
                        "example": 10
                    },
                    "start_date_disc": {
                        "title": "Discount Start Date",
                        "description": "Start date of discount",
                        "format": "datetime",
                        "example": "2024-01-01T00:00:00.000000Z"
                    },
                    "end_date_disc": {
                        "title": "Discount End Date",
                        "description": "End date of discount",
                        "format": "datetime",
                        "example": "2024-02-01T00:00:00.000000Z"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Product Categories",
            "description": "API Endpoints for managing product categories"
        },
        {
            "name": "Products",
            "description": "API Endpoints for managing products"
        },
        {
            "name": "Transactions",
            "description": "API Endpoints for managing transactions"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        }
    ],
    "security": [
        {
            "sanctum": []
        }
    ]
}